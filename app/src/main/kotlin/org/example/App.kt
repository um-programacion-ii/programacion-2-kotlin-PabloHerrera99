/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

class Coche(private var _marca: String = "Ford", private var _modelo: Int = 2020) {
    var marca: String
        get() = _marca
        set(value) {
            _marca = value
        }
    var modelo: Int
        get() = _modelo
        set(value) {
            _modelo = value
        }
}

interface Perimetrable {
    fun calcularPerimetro(): Double
}

class Rectangulo(val ancho: Double, val alto: Double): Perimetrable {

    var area: Double

    // El bloque init se usa para inicializar propiedades o ejecutar código en la creación.
    init {
        // 'area' se calcula una vez cuando se crea el objeto.
        area = ancho * alto
        println("Se ha creado un rectángulo de $ancho x $alto con un área de $area")
    }

    // Un método de la clase
    fun describir() {
        println("Este es un rectángulo.")
    }
    override fun calcularPerimetro(): Double {
        return 2 * (ancho + alto)
    
    }
}


class Circulo(val radio: Double) : Perimetrable {
    override fun calcularPerimetro(): Double {
        return 2 * Math.PI * radio
    }
}

fun main() {

    val coche = Coche("Chevrolet", 2025)

    println("Marca ${coche.marca}")
    println("Modelo ${coche.modelo}")

    println("\n--- Creando un objeto con bloque 'init' y métodos ---")
    val rectangulo1 = Rectangulo(10.0, 5.0)
    // Accediendo a una propiedad calculada en 'init'
    println("El área del rectángulo es: ${rectangulo1.area}")
    // Llamando a los métodos del objeto
    rectangulo1.describir()


    val figuras: List<Perimetrable> = listOf(rectangulo1, Circulo(7.0), Circulo(3.5), Rectangulo(4.0, 6.0))
    for (figura in figuras) {
        println("Perímetro: ${figura.calcularPerimetro()}")
    }
}

